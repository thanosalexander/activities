{"name":"Laravel Activities","tagline":"This package created to help users to create  activities. You can use it to track logins,logouts and anything else inside your application. Just create an activity type and fire it wherever you wish!","body":"# Activities tracking for Laravel\r\n\r\n\r\nTracks activities fired when specific types happened. \r\n\r\n----------\r\n\r\n[![Build Status](https://travis-ci.org/thanosalexander/activities.svg?branch=master)](http://travis-ci.org/thanosalexander/activities)\r\n[![Latest Stable Version](https://poser.pugx.org/thanosalexander/activity/v/stable)](https://packagist.org/packages/thanosalexander/activity)\r\n[![Total Downloads](https://poser.pugx.org/thanosalexander/activity/downloads)](https://packagist.org/packages/thanosalexander/activity)\r\n[![Latest Unstable Version](https://poser.pugx.org/thanosalexander/activity/v/unstable)](https://packagist.org/packages/thanosalexander/activity)\r\n[![License](https://poser.pugx.org/thanosalexander/activity/license)](https://packagist.org/packages/thanosalexander/activity)\r\n\r\n\r\n## Installation\r\n\r\nTo get the latest version of Activities simply require it in your `composer.json` file.\r\n\r\n~~~\r\n\"thanosalexander/activity\":\"~1.0\"\r\n~~~\r\n\r\nYou'll then need to run `composer install` to download it and have the autoloader updated.\r\n\r\nOnce Activities is installed you need to register the service provider with the application. Open up `config/app.php` and find the `providers` key.\r\n\r\n~~~php\r\n'providers' => array(\r\n    ...\r\n    ...\r\n    \\Thanosalexander\\Activity\\ActivityServiceProvider::class,\r\n\r\n)\r\n~~~\r\n\r\nActivities also ships with two facades which provides the static syntax for creating activities. You can register the facade in the `aliases` key of your `config/app.php` file.\r\n\r\n~~~php\r\n'aliases' => array(\r\n\r\n    ...\r\n    ..\r\n\r\n    'Activity' => \\Thanosalexander\\Activity\\Facades\\Activity::class,\r\n    'Type' => \\Thanosalexander\\Activity\\Facades\\Type::class\r\n\r\n)\r\n~~~\r\n\r\n### Publish the configurations\r\n\r\nRun this on the command line from the root of your project:\r\n\r\n~~~\r\n$ php artisan vendor:publish\r\n~~~\r\n\r\nA configuration file will be publish to `config/activities.php`\r\nAlso the migrations will be published into migrations folder!\r\n\r\n### Run the migrations\r\n\r\nActivities package comes with two tables, `activities_types` and `activities`.\r\nJust go to terminal and run \r\n\r\n~~~\r\n$ php artisan migrate\r\n~~~\r\n\r\nNow the tables are created!\r\n\r\n\r\n## Usage\r\n\r\nCreate a new Type\r\n\r\n```php\r\n$type= \\Type::create([\r\n            'name'=>'login',\r\n            'description'=>'login action',\r\n            'label'=>'Login'\r\n        ]);\r\n```\r\n\r\n> All the fields are required in order to create an activity type!\r\nAlso the `name` is unique!\r\n\r\nCreate a new Activity\r\n\r\n```php\r\n$activity = \\Activity::create([\r\n            'user_id'=>0,\r\n            'type_id'=>3,\r\n            'content'=>'The content of this action',\r\n            'ip'=> \\Illuminate\\Support\\Facades\\Request::getClientIp()\r\n        ]);\r\n```\r\n\r\n> The `user_id` field is not required in order to create an Activity! However for guest users actions the field will be `nullable`\r\n\r\n## Controllers\r\nThe package comes with two controllers `TypeController` and `ActivityController`.\r\nThey are almost resource controller with very simple syntax.\r\n\r\n#### Activities Routes\r\n\r\n~~~\r\n /**\r\n     * Activities Routes\r\n     */\r\n    Route::get('activities',array(\r\n        'uses'=>'thanosalexander\\activity\\Http\\Controllers\\ActivityController@index',\r\n        'as'=>'activities.index'\r\n    ));\r\n    Route::post('activities/create',array(\r\n        'uses'=>'thanosalexander\\activity\\Http\\Controllers\\ActivityController@store',\r\n        'as'=>'activities.store'\r\n    ));\r\n    Route::put('activities/update/{id}',array(\r\n        'uses'=>'thanosalexander\\activity\\Http\\Controllers\\ActivityController@update',\r\n        'as'=>'activities.update'\r\n    ));\r\n    Route::get('activities/show/{id}',array(\r\n        'uses'=>'thanosalexander\\activity\\Http\\Controllers\\ActivityController@show',\r\n        'as'=>'activities.show'\r\n    ));\r\n    Route::delete('activities/delete/{id}',array(\r\n        'uses'=>'thanosalexander\\activity\\Http\\Controllers\\ActivityController@delete',\r\n        'as'=>'activities.delete'\r\n    ));\r\n~~~\r\n\r\n#### Types Routes\r\n\r\n~~~\r\n/**\r\n     * Types Routes\r\n     */\r\n    Route::get('types',array(\r\n        'uses'=>'thanosalexander\\activity\\Http\\Controllers\\TypeController@index',\r\n        'as'=>'types.index'\r\n    ));\r\n    Route::post('types/create',array(\r\n        'uses'=>'thanosalexander\\activity\\Http\\Controllers\\TypeController@store',\r\n        'as'=>'types.store'\r\n    ));\r\n    Route::put('types/update/{id}',array(\r\n        'uses'=>'thanosalexander\\activity\\Http\\Controllers\\TypeController@update',\r\n        'as'=>'types.update'\r\n    ));\r\n    Route::get('types/show/{id}',array(\r\n        'uses'=>'thanosalexander\\activity\\Http\\Controllers\\TypeController@show',\r\n        'as'=>'types.show'\r\n    ));\r\n    Route::delete('types/delete/{id}',array(\r\n        'uses'=>'thanosalexander\\activity\\Http\\Controllers\\TypeController@delete',\r\n        'as'=>'types.delete'\r\n    ));\r\n~~~\r\n\r\n\r\n\r\n\r\n","google":"UA-7232755-9","note":"Don't delete this file! It's used internally to help with page regeneration."}